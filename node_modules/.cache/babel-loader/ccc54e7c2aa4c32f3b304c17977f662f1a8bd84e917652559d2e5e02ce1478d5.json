{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './RevUi.css';\n\n// const RevAIComponent = () => {\n//   const [transcription, setTranscription] = useState('');\n//   const [audioFile, setAudioFile] = useState(null);\n\n// // ...\n\n// const transcribeAudio = async () => {\n//     try {\n//       if (!audioFile) {\n//         alert('Please select an audio file.');\n//         return;\n//       }\n\n//       const formData = new FormData();\n//       formData.append('audioUrl', audioFile);\n\n//       const response = await axios.post(\n//         'http://localhost:5000/api/transcribe',\n//         formData,\n//         {\n//           headers: {\n//             'Content-Type': 'application/json'\n//           }\n//         }\n//       );\n\n//       const jobId = response.data.jobId;\n\n//       const checkStatus = async () => {\n//         try {\n//           const transcriptResponse = await axios.get(\n//             `http://localhost:5000/api/transcribe/${jobId}`,\n//             {\n//               headers: {\n//                 'Content-Type': 'application/json'\n//               }\n//             }\n//           );\n\n//           if (transcriptResponse.data.status === \"transcribed\") {\n//             const text = transcriptResponse.data.transcript;\n//             setTranscription(text);\n//           } else {\n//             setTimeout(checkStatus, 3000);\n//           }\n//         } catch (error) {\n//           console.error('Error fetching transcript:', error);\n//         }\n//       };\n\n//       checkStatus();\n//     } catch (error) {\n//       console.error('Error transcribing audio:', error);\n//     }\n//   };  \n\n//   // ...\n\n//   const handleFileChange = (event) => {\n//     setAudioFile(event.target.files[0]);\n//   };\n\n//   return (\n//     <div>\n//         <div>\n//           <div>\n//             <input type=\"file\" onChange={handleFileChange} accept=\"audio/*\" />\n//           </div>\n//             <button onClick={transcribeAudio} >\n//               Transcribe Audio\n//             </button>\n//         </div>\n//         <div>\n//           <p>Transcription Result:</p>\n//           <p>{transcription}</p>\n//         </div>\n//     </div>\n//   );\n// };\n\n// export default RevAIComponent;","map":{"version":3,"names":[],"sources":["C:/Users/adema/OneDrive/Bureau/FAC/MDW3/PPP/PROJECT/another test/project_ai/src/Components/RevAIComponent.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './RevUi.css';\r\n\r\n// const RevAIComponent = () => {\r\n//   const [transcription, setTranscription] = useState('');\r\n//   const [audioFile, setAudioFile] = useState(null);\r\n\r\n// // ...\r\n\r\n// const transcribeAudio = async () => {\r\n//     try {\r\n//       if (!audioFile) {\r\n//         alert('Please select an audio file.');\r\n//         return;\r\n//       }\r\n  \r\n//       const formData = new FormData();\r\n//       formData.append('audioUrl', audioFile);\r\n  \r\n//       const response = await axios.post(\r\n//         'http://localhost:5000/api/transcribe',\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             'Content-Type': 'application/json'\r\n//           }\r\n//         }\r\n//       );\r\n  \r\n//       const jobId = response.data.jobId;\r\n  \r\n//       const checkStatus = async () => {\r\n//         try {\r\n//           const transcriptResponse = await axios.get(\r\n//             `http://localhost:5000/api/transcribe/${jobId}`,\r\n//             {\r\n//               headers: {\r\n//                 'Content-Type': 'application/json'\r\n//               }\r\n//             }\r\n//           );\r\n  \r\n//           if (transcriptResponse.data.status === \"transcribed\") {\r\n//             const text = transcriptResponse.data.transcript;\r\n//             setTranscription(text);\r\n//           } else {\r\n//             setTimeout(checkStatus, 3000);\r\n//           }\r\n//         } catch (error) {\r\n//           console.error('Error fetching transcript:', error);\r\n//         }\r\n//       };\r\n  \r\n//       checkStatus();\r\n//     } catch (error) {\r\n//       console.error('Error transcribing audio:', error);\r\n//     }\r\n//   };  \r\n  \r\n//   // ...\r\n  \r\n\r\n//   const handleFileChange = (event) => {\r\n//     setAudioFile(event.target.files[0]);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//         <div>\r\n//           <div>\r\n//             <input type=\"file\" onChange={handleFileChange} accept=\"audio/*\" />\r\n//           </div>\r\n//             <button onClick={transcribeAudio} >\r\n//               Transcribe Audio\r\n//             </button>\r\n//         </div>\r\n//         <div>\r\n//           <p>Transcription Result:</p>\r\n//           <p>{transcription}</p>\r\n//         </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RevAIComponent;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}