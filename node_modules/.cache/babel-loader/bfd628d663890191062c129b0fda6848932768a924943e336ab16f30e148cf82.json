{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adema\\\\OneDrive\\\\Bureau\\\\FAC\\\\MDW3\\\\PPP\\\\PROJECT\\\\another test\\\\project_ai\\\\src\\\\Components\\\\RevAIComponent.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RevAIComponent() {\n  _s();\n  const [transcription, setTranscription] = useState('');\n  const [audioFile, setAudioFile] = useState(null);\n  const [apiKey, setApiKey] = useState('02lmZ4UVWprlGK2KnOFknfSZbdUZhbcPUap2QvgtRCWBB2Cr2gmSBihGIdSUQ8KCCXp9mVehh97Ojj0f9OWlxV2SDMQ5o'); // Replace with your actual API key\n\n  const transcribeAudio = () => {\n    if (audioFile) {\n      const formData = new FormData();\n      formData.append('media', audioFile);\n      axios.post('https://api.rev.ai/revspeech/v1beta/jobs', formData, {\n        headers: {\n          'Authorization': 'Bearer ' + apiKey,\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => {\n        const jobId = response.data.id;\n        setTimeout(() => {\n          axios.get(`https://api.rev.ai/revspeech/v1beta/jobs/${jobId}/transcript`, {\n            headers: {\n              'Authorization': 'Bearer ' + apiKey\n            }\n          }).then(transcriptionResponse => {\n            const text = transcriptionResponse.data.monologues[0].elements.map(e => e.value).join(' ');\n            setTranscription(text);\n          }).catch(error => {\n            console.error('Error retrieving transcription:', error);\n          });\n        }, 5000);\n      }).catch(error => {\n        console.error('Error uploading file:', error);\n      });\n    } else {\n      alert('Please select an audio file.');\n    }\n  };\n  const handleFileChange = event => {\n    setAudioFile(event.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rev.ai Transcription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \"audio/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: transcribeAudio,\n      children: \"Transcribe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Transcription Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: transcription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(RevAIComponent, \"SfR86ar1KpfBPMCCEYy8scuqU10=\");\n_c = RevAIComponent;\nexport default RevAIComponent;\nvar _c;\n$RefreshReg$(_c, \"RevAIComponent\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","RevAIComponent","_s","transcription","setTranscription","audioFile","setAudioFile","apiKey","setApiKey","transcribeAudio","formData","FormData","append","post","headers","then","response","jobId","data","id","setTimeout","get","transcriptionResponse","text","monologues","elements","map","e","value","join","catch","error","console","alert","handleFileChange","event","target","files","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adema/OneDrive/Bureau/FAC/MDW3/PPP/PROJECT/another test/project_ai/src/Components/RevAIComponent.js"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction RevAIComponent() {\r\n    const [transcription, setTranscription] = useState('');\r\n    const [audioFile, setAudioFile] = useState(null);\r\n    const [apiKey, setApiKey] = useState('02lmZ4UVWprlGK2KnOFknfSZbdUZhbcPUap2QvgtRCWBB2Cr2gmSBihGIdSUQ8KCCXp9mVehh97Ojj0f9OWlxV2SDMQ5o'); // Replace with your actual API key\r\n\r\n    const transcribeAudio = () => {\r\n        if (audioFile) {\r\n            const formData = new FormData();\r\n            formData.append('media', audioFile);\r\n\r\n            axios.post('https://api.rev.ai/revspeech/v1beta/jobs', formData, {\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + apiKey,\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n            .then(response => {\r\n                const jobId = response.data.id;\r\n                setTimeout(() => {\r\n                    axios.get(`https://api.rev.ai/revspeech/v1beta/jobs/${jobId}/transcript`, {\r\n                        headers: {\r\n                            'Authorization': 'Bearer ' + apiKey\r\n                        }\r\n                    })\r\n                    .then(transcriptionResponse => {\r\n                        const text = transcriptionResponse.data.monologues[0].elements.map(e => e.value).join(' ');\r\n                        setTranscription(text);\r\n                    })\r\n                    .catch(error => {\r\n                        console.error('Error retrieving transcription:', error);\r\n                    });\r\n                }, 5000);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error uploading file:', error);\r\n            });\r\n        } else {\r\n            alert('Please select an audio file.');\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        setAudioFile(event.target.files[0]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Rev.ai Transcription</h1>\r\n            <input type=\"file\" onChange={handleFileChange} accept=\"audio/*\" />\r\n            <button onClick={transcribeAudio}>Transcribe</button>\r\n            <div>\r\n                <p>Transcription Result:</p>\r\n                <p>{transcription}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RevAIComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}