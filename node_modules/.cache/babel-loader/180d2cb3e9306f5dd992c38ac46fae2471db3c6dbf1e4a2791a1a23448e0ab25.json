{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adema\\\\OneDrive\\\\Bureau\\\\FAC\\\\MDW3\\\\PPP\\\\PROJECT\\\\another test\\\\project_ai\\\\src\\\\Components\\\\RevAIComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./UI/RevUi.css\";\nimport \"./UI/UI.css\";\nimport \"./UI/UploadButton.css\";\nimport \"./UI/animation.css\";\nimport \"./UI/containerText.css\";\nimport Loader from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RevAIComponent = () => {\n  _s();\n  const [transcription, setTranscription] = useState(\"\");\n  const [audioFile, setAudioFile] = useState();\n  const [fileName, setFileName] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  const transcribeAudio = async () => {\n    try {\n      if (!audioFile) {\n        alert(\"Please upload an audio file.\");\n        return;\n      }\n      setLoading(true);\n      const formData = new FormData();\n      formData.append(\"audioUrl\", audioFile);\n      const postOptions = {\n        method: \"POST\",\n        body: formData\n      };\n      const response = await fetch(\"http://localhost:5000/api/transcribe\", postOptions);\n      const {\n        jobId\n      } = await response.json();\n      const checkStatus = async () => {\n        try {\n          const transcriptResponse = await fetch(`http://localhost:5000/api/transcribe/${jobId}`);\n          const {\n            status,\n            transcript\n          } = await transcriptResponse.json();\n          if (status === \"transcribed\") {\n            setTranscription(transcript);\n          } else {\n            setTimeout(checkStatus, 3000);\n          }\n        } catch (error) {\n          setText(\"Make sure to link this CSS file to your React component or application appropriately. Adjust the styles as needed for your specific layout and design requirements.\");\n          console.error(\"Error fetching transcript:\", error);\n        }\n      };\n      checkStatus();\n      setTimeout(() => {\n        setLoading(false); // Set loading state to false after 5 seconds\n      }, 5000);\n    } catch (error) {\n      console.error(\"Error transcribing audio:\", error);\n      setLoading(false);\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setAudioFile(file);\n    setFileName(file ? file.name : \"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"file-label\",\n            htmlFor: \"file-upload\",\n            \"data-tooltip\": \"Size: 20Mb\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"button-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text\",\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon\",\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  \"aria-hidden\": \"true\",\n                  role: \"img\",\n                  width: \"2em\",\n                  height: \"2em\",\n                  preserveAspectRatio: \"xMidYMid meet\",\n                  viewBox: \"0 0 24 24\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: \"2\",\n                    d: \"M12 15V3m0 12l-4-4m4 4l4-4M2 17l.621 2.485A2 2 0 0 0 4.561 21h14.878a2 2 0 0 0 1.94-1.515L22 17\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"file-upload\",\n              className: \"inputB\",\n              type: \"file\",\n              onChange: handleFileChange,\n              accept: \"audio/*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"file-name\",\n          children: fileName && `Selected File: ${fileName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: transcribeAudio,\n            className: \"btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"animation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), \"Transcribe Audio\", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"animation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result-title\",\n          children: \"Transcription Result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result-text\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"result-text\",\n          children: transcription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(RevAIComponent, \"dCKGKnVuzx/odH6M2dm2bvZcvKI=\");\n_c = RevAIComponent;\nexport default RevAIComponent;\nvar _c;\n$RefreshReg$(_c, \"RevAIComponent\");","map":{"version":3,"names":["React","useState","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","RevAIComponent","_s","transcription","setTranscription","audioFile","setAudioFile","fileName","setFileName","text","setText","isLoading","setLoading","transcribeAudio","alert","formData","FormData","append","postOptions","method","body","response","fetch","jobId","json","checkStatus","transcriptResponse","status","transcript","setTimeout","error","console","handleFileChange","event","file","target","files","name","children","_jsxFileName","lineNumber","columnNumber","className","htmlFor","xmlns","role","width","height","preserveAspectRatio","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","id","type","onChange","accept","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adema/OneDrive/Bureau/FAC/MDW3/PPP/PROJECT/another test/project_ai/src/Components/RevAIComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./UI/RevUi.css\";\r\nimport \"./UI/UI.css\";\r\nimport \"./UI/UploadButton.css\";\r\nimport \"./UI/animation.css\";\r\nimport \"./UI/containerText.css\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst RevAIComponent = () => {\r\n  const [transcription, setTranscription] = useState(\"\");\r\n  const [audioFile, setAudioFile] = useState();\r\n  const [fileName, setFileName] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const transcribeAudio = async () => {\r\n    try {\r\n      if (!audioFile) {\r\n        alert(\"Please upload an audio file.\");\r\n        return;\r\n      }\r\n      setLoading(true);\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"audioUrl\", audioFile);\r\n\r\n      const postOptions = {\r\n        method: \"POST\",\r\n        body: formData,\r\n      };\r\n\r\n      const response = await fetch(\r\n        \"http://localhost:5000/api/transcribe\",\r\n        postOptions\r\n      );\r\n      const { jobId } = await response.json();\r\n\r\n      const checkStatus = async () => {\r\n        try {\r\n          const transcriptResponse = await fetch(\r\n            `http://localhost:5000/api/transcribe/${jobId}`\r\n          );\r\n          const { status, transcript } = await transcriptResponse.json();\r\n\r\n          if (status === \"transcribed\") {\r\n            setTranscription(transcript);\r\n          } else {\r\n            setTimeout(checkStatus, 3000);\r\n          }\r\n        } catch (error) {\r\n          setText(\r\n            \"Make sure to link this CSS file to your React component or application appropriately. Adjust the styles as needed for your specific layout and design requirements.\"\r\n          );\r\n          console.error(\"Error fetching transcript:\", error);\r\n        }\r\n      };\r\n\r\n      checkStatus();\r\n      setTimeout(() => {\r\n        setLoading(false); // Set loading state to false after 5 seconds\r\n      }, 5000);\r\n    } catch (error) {\r\n      console.error(\"Error transcribing audio:\", error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setAudioFile(file);\r\n    setFileName(file ? file.name : \"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"container\">\r\n          <div className=\"center\">\r\n            <div className=\"button\">\r\n              <label\r\n                className=\"file-label\"\r\n                htmlFor=\"file-upload\"\r\n                data-tooltip=\"Size: 20Mb\"\r\n              >\r\n                <span className=\"button-wrapper\">\r\n                  <span className=\"text\">Upload</span>\r\n                  <span className=\"icon\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      aria-hidden=\"true\"\r\n                      role=\"img\"\r\n                      width=\"2em\"\r\n                      height=\"2em\"\r\n                      preserveAspectRatio=\"xMidYMid meet\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M12 15V3m0 12l-4-4m4 4l4-4M2 17l.621 2.485A2 2 0 0 0 4.561 21h14.878a2 2 0 0 0 1.94-1.515L22 17\"\r\n                      ></path>\r\n                    </svg>\r\n                  </span>\r\n                </span>\r\n                <input\r\n                  id=\"file-upload\"\r\n                  className=\"inputB\"\r\n                  type=\"file\"\r\n                  onChange={handleFileChange}\r\n                  accept=\"audio/*\"\r\n                />\r\n              </label>\r\n            </div>\r\n            <p className=\"file-name\">\r\n              {fileName && `Selected File: ${fileName}`}\r\n            </p>\r\n            <div>\r\n              <button onClick={transcribeAudio} className=\"btn\">\r\n                <i className=\"animation\"></i>Transcribe Audio\r\n                <i className=\"animation\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"result-container\">\r\n            <p className=\"result-title\">Transcription Result:</p>\r\n            <p className=\"result-text\">{text}</p>\r\n            <p className=\"result-text\">{transcription}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RevAIComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}