{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adema\\\\OneDrive\\\\Bureau\\\\FAC\\\\MDW3\\\\PPP\\\\PROJECT\\\\another test\\\\project_ai\\\\src\\\\Components\\\\VideoAudioSeparator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoAudioSeparator = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleSeparateAudio = async () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('video', selectedFile);\n      try {\n        const response = await axios.post('http://localhost:5000/api/separate-audio', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Audio separated:', response.data);\n        // Here, you can handle the response from the server (e.g., download the audio)\n      } catch (error) {\n        console.error('Error separating audio:', error);\n        // Handle errors\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"video/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSeparateAudio,\n      children: \"Separate Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoAudioSeparator, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = VideoAudioSeparator;\nexport default VideoAudioSeparator;\nvar _c;\n$RefreshReg$(_c, \"VideoAudioSeparator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","VideoAudioSeparator","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleSeparateAudio","formData","FormData","append","response","post","headers","console","log","data","error","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adema/OneDrive/Bureau/FAC/MDW3/PPP/PROJECT/another test/project_ai/src/Components/VideoAudioSeparator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst VideoAudioSeparator = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleSeparateAudio = async () => {\r\n    if (selectedFile) {\r\n      const formData = new FormData();\r\n      formData.append('video', selectedFile);\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/separate-audio', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        });\r\n        console.log('Audio separated:', response.data);\r\n        // Here, you can handle the response from the server (e.g., download the audio)\r\n      } catch (error) {\r\n        console.error('Error separating audio:', error);\r\n        // Handle errors\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" accept=\"video/*\" onChange={handleFileChange} />\r\n      <button onClick={handleSeparateAudio}>Separate Audio</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoAudioSeparator;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMQ,gBAAgB,GAAIC,KAAK,IAAK;IAClCF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAIN,YAAY,EAAE;MAChB,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAET,YAAY,CAAC;MAEtC,IAAI;QACF,MAAMU,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,0CAA0C,EAAEJ,QAAQ,EAAE;UACtFK,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;QAC9C;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C;MACF;IACF;EACF,CAAC;;EAED,oBACEnB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAElB;IAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClE3B,OAAA;MAAQ4B,OAAO,EAAEnB,mBAAoB;MAAAW,QAAA,EAAC;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAACzB,EAAA,CAjCID,mBAAmB;AAAA4B,EAAA,GAAnB5B,mBAAmB;AAmCzB,eAAeA,mBAAmB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}