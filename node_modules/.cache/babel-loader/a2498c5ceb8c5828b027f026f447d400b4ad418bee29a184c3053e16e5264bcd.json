{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adema\\\\OneDrive\\\\Bureau\\\\FAC\\\\MDW3\\\\PPP\\\\PROJECT\\\\another test\\\\project_ai\\\\src\\\\Components\\\\RevAIComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './RevUi.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RevAIComponent = () => {\n  _s();\n  const [transcription, setTranscription] = useState('');\n  const [audioFile, setAudioFile] = useState();\n  const transcribeAudio = async () => {\n    try {\n      if (!audioFile) {\n        alert('Please select an audio file.');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('audioUrl', audioFile);\n      const response = await axios.post('http://localhost:5000/api/transcribe', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const jobId = response.data.jobId;\n      console.log(jobId);\n      const checkStatus = async () => {\n        try {\n          const transcriptResponse = await axios.get(`http://localhost:5000/api/transcribe/${jobId}`, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          if (transcriptResponse.data.status === \"transcribed\") {\n            const text = transcriptResponse.data.transcript;\n            setTranscription(text);\n          } else {\n            setTimeout(checkStatus, 3000);\n          }\n        } catch (error) {\n          console.error('Error fetching transcript:', error);\n        }\n      };\n      checkStatus();\n    } catch (error) {\n      console.error('Error transcribing audio:', error);\n    }\n  };\n  const handleFileChange = event => {\n    setAudioFile(event.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          accept: \"audio/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: transcribeAudio,\n        children: \"Transcribe Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Transcription Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: transcription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(RevAIComponent, \"sM/hzRYmAYAwzGWHXz6WYyJNP3c=\");\n_c = RevAIComponent;\nexport default RevAIComponent;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './RevUi.css';\n\n// const RevAIComponent = () => {\n//   const [transcription, setTranscription] = useState('');\n//   const [jobIdInput, setJobIdInput] = useState('');\n\n//   const fetchTranscript = async () => {\n//     try {\n//       const transcriptResponse = await axios.get(\n//         `http://localhost:5000/api/transcript/${jobIdInput}`,\n//         {\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//         }\n//       );\n\n//       if (transcriptResponse.data.status === 'transcribed') {\n//         const text = transcriptResponse.data.transcript;\n//         setTranscription(text);\n//       } else {\n//         setTimeout(fetchTranscript, 3000);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching transcript:', error);\n//     }\n//   };\n\n//   const handleJobIdChange = (event) => {\n//     setJobIdInput(event.target.value);\n//   };\n\n//   const handleFetchTranscript = () => {\n//     if (!jobIdInput) {\n//       alert('Please enter a jobId.');\n//       return;\n//     }\n//     fetchTranscript();\n//   };\n\n//   return (\n//     <div>\n//       <div>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter jobId\"\n//             value={jobIdInput}\n//             onChange={handleJobIdChange}\n//           />\n//           <button onClick={handleFetchTranscript}>Fetch Transcript</button>\n//         </div>\n//       </div>\n//       <div>\n//         <p>Transcription Result:</p>\n//         <p>{transcription}</p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default RevAIComponent;\nvar _c;\n$RefreshReg$(_c, \"RevAIComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RevAIComponent","_s","transcription","setTranscription","audioFile","setAudioFile","transcribeAudio","alert","formData","FormData","append","response","axios","post","headers","jobId","data","console","log","checkStatus","transcriptResponse","get","status","text","transcript","setTimeout","error","handleFileChange","event","target","files","children","type","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adema/OneDrive/Bureau/FAC/MDW3/PPP/PROJECT/another test/project_ai/src/Components/RevAIComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './RevUi.css';\r\n\r\nconst RevAIComponent = () => {\r\n  const [transcription, setTranscription] = useState('');\r\n  const [audioFile, setAudioFile] = useState();\r\n\r\nconst transcribeAudio = async () => {\r\n    try {\r\n      if (!audioFile) {\r\n        alert('Please select an audio file.');\r\n        return;\r\n      }\r\n  \r\n      const formData = new FormData();\r\n      formData.append('audioUrl', audioFile);\r\n  \r\n      const response = await axios.post(\r\n        'http://localhost:5000/api/transcribe',\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n  \r\n      const jobId = response.data.jobId;\r\n      console.log(jobId);\r\n  \r\n      const checkStatus = async () => {\r\n        try {\r\n          const transcriptResponse = await axios.get(\r\n            `http://localhost:5000/api/transcribe/${jobId}`,\r\n            {\r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              }\r\n            }\r\n          );\r\n  \r\n          if (transcriptResponse.data.status === \"transcribed\") {\r\n            const text = transcriptResponse.data.transcript;\r\n            setTranscription(text);\r\n          } else {\r\n            setTimeout(checkStatus, 3000);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching transcript:', error);\r\n        }\r\n      };\r\n  \r\n      checkStatus();\r\n    } catch (error) {\r\n      console.error('Error transcribing audio:', error);\r\n    }\r\n  };  \r\n\r\n  const handleFileChange = (event) => {\r\n    setAudioFile(event.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <div>\r\n          <div>\r\n            <input type=\"file\" onChange={handleFileChange} accept=\"audio/*\" />\r\n          </div>\r\n            <button onClick={transcribeAudio} >\r\n              Transcribe Audio\r\n            </button>\r\n        </div>\r\n        <div>\r\n          <p>Transcription Result:</p>\r\n          <p>{transcription}</p>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RevAIComponent;\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './RevUi.css';\r\n\r\n// const RevAIComponent = () => {\r\n//   const [transcription, setTranscription] = useState('');\r\n//   const [jobIdInput, setJobIdInput] = useState('');\r\n\r\n//   const fetchTranscript = async () => {\r\n//     try {\r\n//       const transcriptResponse = await axios.get(\r\n//         `http://localhost:5000/api/transcript/${jobIdInput}`,\r\n//         {\r\n//           headers: {\r\n//             'Content-Type': 'application/json',\r\n//           },\r\n//         }\r\n//       );\r\n\r\n//       if (transcriptResponse.data.status === 'transcribed') {\r\n//         const text = transcriptResponse.data.transcript;\r\n//         setTranscription(text);\r\n//       } else {\r\n//         setTimeout(fetchTranscript, 3000);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error fetching transcript:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleJobIdChange = (event) => {\r\n//     setJobIdInput(event.target.value);\r\n//   };\r\n\r\n//   const handleFetchTranscript = () => {\r\n//     if (!jobIdInput) {\r\n//       alert('Please enter a jobId.');\r\n//       return;\r\n//     }\r\n//     fetchTranscript();\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter jobId\"\r\n//             value={jobIdInput}\r\n//             onChange={handleJobIdChange}\r\n//           />\r\n//           <button onClick={handleFetchTranscript}>Fetch Transcript</button>\r\n//         </div>\r\n//       </div>\r\n//       <div>\r\n//         <p>Transcription Result:</p>\r\n//         <p>{transcription}</p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RevAIComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}