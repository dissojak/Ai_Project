{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adema\\\\OneDrive\\\\Bureau\\\\FAC\\\\MDW3\\\\PPP\\\\PROJECT\\\\another test\\\\project_ai\\\\src\\\\Components\\\\RevAIComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./UI/RevUi.css\";\nimport \"./UI/UI.css\";\nimport \"./UI/UploadButton.css\";\nimport \"./UI/animation.css\";\nimport \"./UI/containerText.css\";\nimport Loader from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RevAIComponent = () => {\n  _s();\n  const [transcription, setTranscription] = useState(\"\");\n  const [audioFile, setAudioFile] = useState();\n  const [fileName, setFileName] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  const [showLoader, setShowLoader] = useState(false);\n  const transcribeAudio = async () => {\n    try {\n      if (!audioFile) {\n        alert(\"Please upload an audio file.\");\n        return;\n      }\n      setLoading(true);\n      setShowLoader(true);\n\n      // Simulating a fetch operation for jobId\n      const jobId = await simulateJobIdFetch();\n      const checkStatus = async () => {\n        try {\n          // Simulating fetching transcript status\n          const {\n            status,\n            transcript\n          } = await simulateTranscriptFetch(jobId);\n          if (status === \"transcribed\") {\n            setTranscription(transcript);\n          } else {\n            setTimeout(checkStatus, 3000);\n          }\n        } catch (error) {\n          setText(\"Error fetching transcript.\");\n          console.error(\"Error fetching transcript:\", error);\n        }\n      };\n      checkStatus();\n      setTimeout(() => {\n        setLoading(false);\n        setShowLoader(false);\n      }, 5000);\n    } catch (error) {\n      console.error(\"Error transcribing audio:\", error);\n      setLoading(false);\n      setShowLoader(false);\n    }\n  };\n  const simulateJobIdFetch = () => {\n    return new Promise(resolve => {\n      // Simulating jobId fetch after 1 second\n      setTimeout(() => {\n        resolve(\"some-job-id\");\n      }, 1000);\n    });\n  };\n  const simulateTranscriptFetch = jobId => {\n    return new Promise(resolve => {\n      // Simulating transcript fetch after 1 second\n      setTimeout(() => {\n        resolve({\n          status: \"transcribed\",\n          transcript: \"This is the transcript.\"\n        });\n      }, 1000);\n    });\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setAudioFile(file);\n    setFileName(file ? file.name : \"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: transcribeAudio,\n          className: \"btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"animation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), \"Transcribe Audio\", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"animation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), showLoader && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result-title\",\n        children: \"Transcription Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result-text\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result-text\",\n        children: transcription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(RevAIComponent, \"yyU5nEgeaa5psRx6NyIsTnZS0Mo=\");\n_c = RevAIComponent;\nexport default RevAIComponent;\nvar _c;\n$RefreshReg$(_c, \"RevAIComponent\");","map":{"version":3,"names":["React","useState","Loader","jsxDEV","_jsxDEV","RevAIComponent","_s","transcription","setTranscription","audioFile","setAudioFile","fileName","setFileName","text","setText","isLoading","setLoading","showLoader","setShowLoader","transcribeAudio","alert","jobId","simulateJobIdFetch","checkStatus","status","transcript","simulateTranscriptFetch","setTimeout","error","console","Promise","resolve","handleFileChange","event","file","target","files","name","className","children","onClick","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adema/OneDrive/Bureau/FAC/MDW3/PPP/PROJECT/another test/project_ai/src/Components/RevAIComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./UI/RevUi.css\";\r\nimport \"./UI/UI.css\";\r\nimport \"./UI/UploadButton.css\";\r\nimport \"./UI/animation.css\";\r\nimport \"./UI/containerText.css\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst RevAIComponent = () => {\r\n  const [transcription, setTranscription] = useState(\"\");\r\n  const [audioFile, setAudioFile] = useState();\r\n  const [fileName, setFileName] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [showLoader, setShowLoader] = useState(false);\r\n\r\n  const transcribeAudio = async () => {\r\n    try {\r\n      if (!audioFile) {\r\n        alert(\"Please upload an audio file.\");\r\n        return;\r\n      }\r\n      setLoading(true);\r\n      setShowLoader(true);\r\n\r\n      // Simulating a fetch operation for jobId\r\n      const jobId = await simulateJobIdFetch();\r\n\r\n      const checkStatus = async () => {\r\n        try {\r\n          // Simulating fetching transcript status\r\n          const { status, transcript } = await simulateTranscriptFetch(jobId);\r\n\r\n          if (status === \"transcribed\") {\r\n            setTranscription(transcript);\r\n          } else {\r\n            setTimeout(checkStatus, 3000);\r\n          }\r\n        } catch (error) {\r\n          setText(\"Error fetching transcript.\");\r\n          console.error(\"Error fetching transcript:\", error);\r\n        }\r\n      };\r\n\r\n      checkStatus();\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n        setShowLoader(false);\r\n      }, 5000);\r\n    } catch (error) {\r\n      console.error(\"Error transcribing audio:\", error);\r\n      setLoading(false);\r\n      setShowLoader(false);\r\n    }\r\n  };\r\n\r\n  const simulateJobIdFetch = () => {\r\n    return new Promise((resolve) => {\r\n      // Simulating jobId fetch after 1 second\r\n      setTimeout(() => {\r\n        resolve(\"some-job-id\");\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  const simulateTranscriptFetch = (jobId) => {\r\n    return new Promise((resolve) => {\r\n      // Simulating transcript fetch after 1 second\r\n      setTimeout(() => {\r\n        resolve({ status: \"transcribed\", transcript: \"This is the transcript.\" });\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setAudioFile(file);\r\n    setFileName(file ? file.name : \"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"center\">\r\n        <div>\r\n          <button onClick={transcribeAudio} className=\"btn\">\r\n            <i className=\"animation\"></i>Transcribe Audio\r\n            <i className=\"animation\"></i>\r\n          </button>\r\n          {showLoader && <Loader />}\r\n        </div>\r\n      </div>\r\n      <div className=\"result-container\">\r\n        <p className=\"result-title\">Transcription Result:</p>\r\n        <p className=\"result-text\">{text}</p>\r\n        <p className=\"result-text\">{transcription}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RevAIComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}